
#include <iostream>//including things we need
#include <cstring>
using namespace std;//to not have to write std:: before literally many things
void printboard(char board[3][3]);//my functions
bool checktaken(char board[3][3], int num, int num2);
bool checkwin(char board[3][3]);
bool checktie(char board[3][3]);
int main() {//main
  int a = 0;
  int xwins = 0;//wins
  int owins = 0;
  cout<<"Welcome to Tic Tac Toe! When someone wins or ties, say y to signify that you want to play again, and n to stop playing. Player X has " << xwins << " wins, and Player O has " << owins << " wins";//start off
  cout<<endl;
  int count2 = 0;
  while (a == 0) {//start of whole thing, with loop so i canbreak if they stop playing
    int count = 0;
    char board [3][3];//making array to store answers
    for (int i = 0; i < 3; i ++) {
      for(int j = 0; j< 3; j++) {
        board[i][j] = ' ';//setting them all to empties
         }
    }
    printboard(board);//printing the board

    int b = 0;
    //secondary while loop
    while (b == 0) {
      count2++;//to check if its an X input or O input
      char input[3];//input 
      cin >> input;
      int num = (int)input[1] - '0';
      char letter = input[0];
      if (num >= 0 && num<= 3) {//checking if the number is between 1 and 3 inclusive
        int num2 = 0;
        if (count2 % 2 != 0) {//for X inputs
          if(letter == 'a') {//the if statements here are to sort which column
            num2= 0;
            if (checktaken(board,num,num2) == true) {//checktaken method to check if that spot was already selected
              board[num-1][num2] = 'X';
              printboard(board);
            }
            else {
              cout<<"Spot taken";
              count2 = count2-1;
            }
            cout<<endl;
          }
          if (letter == 'b') {
            num2= 1;
            if (checktaken(board,num,num2) == true) {
              board[num-1][num2] = 'X';
              printboard(board);
            }
            else {
              cout<<"Spot taken";
            }
            cout<<endl;
          }
          if (letter == 'c') {
            num2 = 2;
            if (checktaken(board,num,num2) == true) {
              board[num-1][num2] = 'X';
              printboard(board);
            }
            cout<<endl;
          }
        }
        //for O's, same concept though
        else {
           if(letter == 'a') {
            num2 = 0;
            if (checktaken(board,num,num2) == true) {
              board[num-1][num2] = 'O';
              printboard(board);
            }
            else {
              cout<<"spot taken";
            }
            cout<<endl;
          }
          if (letter == 'b') {
            num2 = 1;
            if (checktaken(board,num,num2) == true) {
              board[num-1][num2] = 'O';
              printboard(board);
            }
            else {
              cout<< "spot taken";
            }
            cout<<endl;
          }
          if (letter == 'c') {
            num2 = 2;
            if (checktaken(board,num,num2) == true) {
              board[num-1][num2] = 'O';
              printboard(board);
            }
            else {
              cout<<"spot taken";
            }
            cout<<endl;
          }
        }
      }//checking win every move
      if(checkwin(board) == true) {
        if (count2 % 2 != 0) {//win count adding 
          xwins++;
        }
        else {
          owins++;
        }
        cout<<"THERE IS A WIN! Want to play again?";
        char answer;
        cin>>answer;
        if (answer == 'y') {
          count2 = 0;
          for (int i = 0; i < 3; i ++) {//resetting board
            for(int j = 0; j< 3; j++) {
              board[i][j] = ' ';
            }
          }
          cout<< "Player X has " << xwins << " wins, and Player O has " << owins << " wins";
          cout<< endl;
          printboard(board);
        }
        else {
          b = 1;
          a = 1;
        }
      }
      else {
        if (checktie(board) == true) {//check tie, with same concept. 
          cout<<"There seems to be a tie... Boring... Anyhow, want to play again?";//tie msg
          char answer; 
          cin>> answer;
          if (answer == 'y') {
            count2 = 0;
            for (int i = 0; i < 3; i ++) {
              for(int j = 0; j< 3; j++) {
                board[i][j] = ' ';
              }
            }
            cout<< endl;
            printboard(board);
          }
          else {
            b = 1;
            a = 1;
          }
        }
      }
    }
  return 0;
  }
}
//print board method
void printboard(char board[3][3]) {
   cout<<"   a   b   c";
   cout<<endl;
   cout<<"1" << "  "<< board[0][0] << "   " << board[0][1] << "   " << board[0][2] << "  ";
   cout<<endl;
   cout<<" ";
   cout<<endl;
   cout<<"2" << "  "<< board[1][0]<< "   " <<  board[1][1] << "   " << board[1][2] << "  ";
   cout<<endl;
   cout<<" ";
   cout<<endl;
   cout<<"3" <<  "  " << board[2][0] << "   " << board[2][1] << "   " << board[2][2] << "  ";
}
//checktaken method
bool checktaken(char board[3][3], int num, int num2) {
    if (board[num-1][num2] == 'X' || board[num-1][num2] == 'O') {
      return false;
    }
    else {
      return true;
    }
}
// win function
bool checkwin(char board[3][3]) {
  //Going through array to check if theres a win. I know I could have done with this for loops 
  if ((board[0][0] == board[0][1] ) && (board[0][0] == board[0][2]) && (board[0][0] == 'X' || board[0][0] == 'O'))  {
    return true;
  }
  if ((board[1][0] == board[1][1]) && (board[1][0] == board[1][2]) && (board[1][0] == 'X' || board[1][0] == 'O'))  {
    return true;
  }
  if ((board[2][0] == board[2][1]) && (board[2][0] == board[2][2]) && (board[2][0] == 'X' || board[2][0] == 'O'))  {
    return true;
  }
  if ((board[0][0] == board[1][0]) && (board[0][0] == board[2][0]) && (board[1][0] == 'X' || board[1][0] == 'O'))  {
    return true;
  }
  if ((board[0][1] == board[1][1]) && (board[0][1] == board[2][1]) && (board[0][1] == 'X' || board[0][1] == 'O'))  {
    return true;
  }
  if ((board[0][2] == board[1][2]) && (board[0][2] == board[2][2]) && (board[0][2] == 'X' || board[0][2] == 'O'))  {
    return true;
  }
  if ((board[0][0] == board[1][1]) && (board[0][0] == board[2][2]) && (board[0][0] == 'X' || board[0][0] == 'O'))  {
    return true;
  }
  if ((board[0][2] == board[1][1]) && (board[0][2] == board[2][0]) && (board[0][2] == 'X' || board[0][2] == 'O'))  {
    return true;
  }
  return false;
}
//checking if its all occupied and if thats true but no win happened then its a tie
bool checktie(char board [3][3]) {
  int count10 = 0;
  for (int i = 0; i < 3; i++) {
    for (int j = 0; j < 3; j++) {
      if(board[i][j] == 'X' || board[i][j] == 'O') {
        count10++;
      }
    }
  }
  if (count10 == 9) {
    return true;
  }
  return false;
}

